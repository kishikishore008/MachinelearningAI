LAB CYCLE 1
PART -A 
EXPERIMENT-2:

1. Perform the following:
Consider the Company database with following Schema
EMPLOYEE(FNAME, MINIT, LNAME, SSN, BDATE,ADDRESS,SEX,SALARY, SUPERSSN, DNO)
DEPARTMENT (DNAME, DNO,MGRSSN,MSRSTARTDATE) 
DEPT_LOCATIONS (DNO, DLOCATION)
PROJECT (PNAME, PNO, PLOCATION, DNUM) 
WORKS_ON (ESSN, PNO,HOURS)
DEPENDENT (ESSN, DEPENDENT_NAME, SEX, BDATE, RELATIONSHIP)


EXPERIMENT-2
Perform the following:
1.	Create company database
2.	Viewing all databases
3.	Viewing all Tables in a Database,
4.	Creating Tables (With and Without Constraints)
5.	Inserting/Updating/Deleting Records in a Table
6.	Saving (Commit) and Undoing (rollback)

SOLUTION:
1. Creating a Database
   CREATE DATABASE Company;

2. Viewing all databases 
   SHOW DATABASES;
3. Viewing all Tables in a Database, 
 SHOW tables;


4.  Creating Tables (With and Without Constraints) 

DEPARTMENT TABLE CODE:
create table DEPARTMENT61(DNO NUMBER primary key,DNAME varchar2(20),MGRstartdate date);

Table created

DESC DEPARTMENT61;

OUTPUT:

Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
DEPARTMENT61	DNO		Number		-	-		-	1		-		-	
 		DNAME		Varchar2	20	-		-	-		nullable	-
 		MGRSTARTDATE	Date		7	-		-	-		nullable	-	-
 		
	
2.EMPLOYEE TABLE CODE
CREATE TABLE EMPLOYEE61(SSN VARCHAR2(10)PRIMARY KEY,FNAME VARCHAR2(10), MINIT char,LNAME VARCHAR2(10),ADDRESS VARCHAR2(10),SEX CHAR,SALARY INTEGER, SUPERSSN REFERENCES EMPLOYEE61(SSN),DNO REFERENCES DEPARTMENT61(DNO),BDATE DATE);

Table created

DESC EMPLOYEE61;

OUTPUT:

Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
EMPLOYEE61	SSN		Varchar2	10	-		-	1		-		-	-
 		FNAME		Varchar2	10	-		-	-		nullable	-	-
 		MINIT		Varchar2	10	-		-	-		nullable	-	-
 		LNAME		Varchar2	10	-		-	-		nullable	-	-
 		ADDRESS		Varchar2	10	-		-	-		nullable	-	-
 		SEX		Char		1	-		-	-		nullable	-	-
 		SALARY		Number		-	-		0	-		nullable	-	-
 		SUPERSSN	Varchar2	10	-		-	-		nullable	-	-
 		DNO		Number		-	-		-	-		nullable	-	-
 		BDATE		Date		7	-		-	-		nullable	-	-
	


	

NOTE : Once DEPARTMENT and EMPLOYEE tables are created we must alter department table to add foreign constraint MGRSSN using sql command.

ALTER TABLE DEPARTMENT61 ADD MGRSSN REFERENCES EMPLOYEE61(SSN);

Table Altered

DESC DEPARTMENT61;

OUTPUT:

Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
DEPARTMENT61	DNO		Number		-	-		-	1		-		-	
 		DNAME		Varchar2	20	-		-	-		nullable	-
 		MGRSTARTDATE	Date		7	-		-	-		nullable	-	-
 		MGRSSN		Varchar2	10	-		-	-		nullable	-	-
	


DLOCATION TABLE CODE
CREATE TABLE DLOCATION61( DLOC VARCHAR2(20) Primary key, DNO REFERENCES DEPARTMENT61(DNO));

Table created

DESC DLOCATIONS61;

OUTPUT:

Table		Column	Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
DLOCATION61	DLOC	Varchar2	20	-		-	1		-		-	-
 		DNO	Number		-	-		-	-		nullable	-	-



PROJECT TABLE CODE:
CREATE TABLE PROJECT61(PNO NUMBER PRIMARY KEY,PNAME VARCHAR2(20),PLOCATION VARCHAR2(20),DNO REFERENCES DEPARTMENT61(DNO));
Table created

DESC PROJECT61;

OUTPUT:

able		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
PROJECT61	PNO		Number		-	-		-	1		-		-	-
 		PNAME		Varchar2	20	-		-	-		nullable	-	-
 		PLOCATION	Varchar2	20	-		-	-		nullable	-	-
 		DNO		Number		-	-		-	-		nullable	-	-




WORKS_ON TABLE CODE:
CREATE TABLE WORKS_ON61(SSN REFERENCES EMPLOYEE61(SSN),PNO REFERENCES PROJECT61(PNO),HOURS NUMBER );

Table created

DESC WORKS_ON61;

OUTPUT:

Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
WORKS_ON61	SSN		Varchar2	10	-		-	-		nullable	-	-
 		PNO		Number		-	-		0	-		nullable	-	-
 		HOURS		Number		-	-		-	-		nullable	-	-




CREATE TABLE DEPENDENT61(ESSN REFERENCES EMPLOYEE61(SSN),DEPENDENT_NAME VARCHAR2(10),SEX CHAR,BDATE DATE,RELATIONSHIP VARCHAR2(10));

Table created

DESC DEPENDENT61;

OUTPUT:

Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
DEPENDENT61	ESSN		Varchar2	10	-		-	-		nullable	-	-
 		DEPENDENT_NAME	Varchar2	10	-		-	-		nullable	-	-
 		SEX		Char		1	-		-	-		nullable	-	-
 		BDATE		Date		7	-		-	-		nullable	-	-
 		RELATIONSHIP	Varchar2	10	-		-	-		nullable	-	-
Inserting values into employee table:

INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'U
BCA01','PUNITH','R','GOWDA','BANGLORE','M',25000,'11-JAN-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA02','DEEPAK','R','SINGH','BANGLORE','M',35000,'16-FEB-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA03','RAJATH','S','GOWDA','BANGLORE','M',45000,'18-JAN-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA04','SUSHAN','H','SHETTY','BANGLORE','M',25000,'11-SEP-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA05','SATHISH','P','KUMAR','BANGLORE','M',35000,'21-JAN-2002');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA06','SHWETHA','M','GOWDA','BANGLORE','F',65000,'18-MAR-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA07','BHARATH','D','GOWDA','MANGLORE','M',25000,'14-OCT-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA08','LALITHA','R','GOWDA','BANGLORE','F',45000,'12-JAN-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA09','SHRAVANI','R','GOWDA','BANGLORE','F',25000,'18-JUN-2003');
1 row updated
INSERT INTO EMPLOYEE61(SSN,FNAME,MINIT,LNAME,ADDRESS,SEX,SALARY,BDATE) VALUES( 'UBCA10','RAGHU','R','SHETTY','BANGLORE','M',25000,'19-JAN-2003');
1 row updated

SELECT * FROM EMPLOYEE61;

OUTPUT:

SSN	FNAME	 MINIT	LNAME	ADDRESS		SEX	SALARY	BDATE
UBCA01	PUNITH	 R	GOWDA	BANGLORE	M	25000	11-Jan-03
UBCA02	DEEPAK	 R	SINGH	BANGLORE	M	35000	16-Feb-03
UBCA03	RAJATH	 S	GOWDA	BANGLORE	M	45000	18-Jan-03
UBCA04	SUSHAN	 H	SHETTY	BANGLORE	M	25000	11-Sep-03
UBCA05	SATHISH	 P	KUMAR	BANGLORE	M	35000	21-Jan-02
UBCA06	SHWETHA	 M	GOWDA	BANGLORE	F	65000	18-Mar-03
UBCA07	BHARATH	 D	GOWDA	MANGLORE	M	25000	14-Oct-03
UBCA08	LALITHA	 R	GOWDA	BANGLORE	F	45000	12-Jan-03
UBCA09	SHRAVANI R	GOWDA	BANGLORE	F	25000	18-Jun-03
UBCA10	RAGHU	 R	SHETTY	BANGLORE	M	25000	19-Jan-03
					


Inserting values into department table:
INSERT INTO DEPARTMENT61 VALUES(1,'RESEARCH','01-JAN-2000','UBCA01');
1 row updated
INSERT INTO DEPARTMENT61 VALUES(3,'ACCOUNTS','01-FEB-2001','UBCA02');
1 row updated
INSERT INTO DEPARTMENT61 VALUES(5,'BCA','01-JAN-2000','UBCA03');
1 row updated

SELECT * FROM DEPARTMENT61;

OUTPUT:

DNO	DNAME		MGRSTARTDATE	MGRSSN
1	RESEARCH	01-Jan-00	UBCA01
3	ACCOUNTS	01-Feb-01	UBCA02
5	BCA		01-Jan-00	UBCA03


Inserting values into employee table:
UPDATE EMPLOYEE61 SET DNO=1,SUPERSSN='UBCA10' WHERE SSN='UBCA01';
1 row updated
UPDATE EMPLOYEE61 SET DNO=3,SUPERSSN='UBCA10' WHERE SSN='UBCA02';
1 row updated
UPDATE EMPLOYEE61 SET DNO=5,SUPERSSN='UBCA10' WHERE SSN='UBCA03';
1 row updated
UPDATE EMPLOYEE61 SET DNO=1,SUPERSSN='UBCA10' WHERE SSN='UBCA04';
1 row updated
UPDATE EMPLOYEE61 SET DNO=3,SUPERSSN='UBCA10' WHERE SSN='UBCA05';
1 row updated
UPDATE EMPLOYEE61 SET DNO=3,SUPERSSN='UBCA10' WHERE SSN='UBCA06';
1 row updated
UPDATE EMPLOYEE61 SET DNO=3,SUPERSSN='UBCA10' WHERE SSN='UBCA07';
1 row updated
UPDATE EMPLOYEE61 SET DNO=5,SUPERSSN='UBCA10' WHERE SSN='UBCA08';
1 row updated
UPDATE EMPLOYEE61 SET DNO=5,SUPERSSN='UBCA10' WHERE SSN='UBCA09';
1 row updated

SELECT * FROM EMPLOYEE61;

OUTPUT:	

SSN	FNAME	 MINIT	LNAME	ADDRESS		SEX	SALARY	BDATE		SUPERSSN	DNO
UBCA01	PUNITH	 R	GOWDA	BANGLORE	M	25000	11-Jan-03	UBCA10		1
UBCA02	DEEPAK	 R	SINGH	BANGLORE	M	35000	16-Feb-03	UBCA10		3
UBCA03	RAJATH	 S	GOWDA	BANGLORE	M	45000	18-Jan-03	UBCA10		5
UBCA04	SUSHAN	 H	SHETTY	BANGLORE	M	25000	11-Sep-03	UBCA10		1
UBCA05	SATHISH	 P	KUMAR	BANGLORE	M	35000	21-Jan-02	UBCA10		3
UBCA06	SHWETHA	 M	GOWDA	BANGLORE	F	65000	18-Mar-03	UBCA10		3
UBCA07	BHARATH	 D	GOWDA	MANGLORE	M	25000	14-Oct-03	UBCA10		3
UBCA08	LALITHA	 R	GOWDA	BANGLORE	F	45000	12-Jan-03	UBCA10		5
UBCA09	SHRAVANI R	GOWDA	BANGLORE	F	25000	18-Jun-03	UBCA10		5
UBCA10	RAGHU	 R	SHETTY	BANGLORE	M	25000	19-Jan-03	-		-
	

Inserting values into DLOCATION table:
INSERT INTO DLOCATION61 VALUES('BANGLORE',1);
1 row updated
INSERT INTO DLOCATION61 VALUES('BANGLORE',3);
1 row updated
INSERT INTO DLOCATION61 VALUES('MANGLORE',5);
1 row updated
                             SELECT *FROM DLOCATION61;
    OUTPUT:
DLOC		DNO
BANGLORE	1
MANGLORE	5
HYDERABAD	3


Inserting values into PROJECT table:
INSERT INTO PROJECT61 VALUES(100,'DOTNET','BANGLORE',1);
1 row updated
INSERT INTO PROJECT61 VALUES(101,'WEBDEVELOPMENT','BANGLORE',1);
1 row updated
INSERT INTO PROJECT61 VALUES(102,'EMBEDDED_C','HYDERABAD',3);
1 row updated
INSERT INTO PROJECT61 VALUES(103,'METRO_RAIL','HYDERABAD',3);
1 row updated
INSERT INTO PROJECT61 VALUES(104,'ATTENDENCE_REPORT','MANGLORE',5);
1 row updated
INSERT INTO PROJECT61 VALUES(105,'DATA_SCIENCE','MANGLORE',5);
1 row updated

SELECT * FROM PROJECT61;

OUTPUT:

PNO	PNAME			PLOCATION	DNO
100	DOTNET			BANGLORE	1
101	WEBDEVELOPMENT		BANGLORE	1
102	EMBEDDED_C		HYDERABAD	3
103	METRO_RAIL		HYDERABAD	3
104	ATTENDENCE_REPORT	MANGLORE	5
105	DATA_SCIENCE		MANGLORE	5


Inserting values into WORKS_ON table:
INSERT INTO WORKS_ON61 VALUES('UBCA01',100,36);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA02',102,46);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA03',104,36);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA04',101,36);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA05',102,36);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA06',103,46);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA07',103,46);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA08',104,56);
1 row updated
INSERT INTO WORKS_ON61 VALUES('UBCA09',105,56);
1 row updated

SELECT * FROM WORKS_ON61;

OUTPUT:

SSN	PNO	HOURS
UBCA02	102	46
UBCA03	104	36
UBCA04	101	36
UBCA05	102	36
UBCA06	103	46
UBCA07	103	46
UBCA08	104	56
UBCA09	105	56
UBCA01	100	36


Inserting values into DEPENDENT table:
INSERT INTO DEPENDENT61 VALUES ('UBCA01','RAMYA','F','01-JAN-2003','WIFE');
1 row updated
INSERT INTO DEPENDENT61 VALUES ('UBCA02','MAJU','F','01-FEB-2003','WIFE');
1 row updated
INSERT INTO DEPENDENT61 VALUES ('UBCA03','RAGHU','M','23-JAN-2003','SON');
1 row updated

SELECT * FROM DEPENDENT61;

OUTPUT:
ESSN	DEPENDENT_NAME	SEX	BDATE		RELATIONSHIP
UBCA01	RAMYA		F	01-Jan-03	WIFE
UBCA02	MAJU		F	01-Feb-03	WIFE
UBCA03	RAGHU		M	23-Jan-03	SON


DELETE FROM DEPENDENT61 WHERE ESSN='UBCA01';
       1 row dropped

SELECT * FROM DEPENDENT61;

OUTPUT:
ESSN	DEPENDENT_NAME	SEX	BDATE		RELATIONSHIP
UBCA02	MAJU		F	01-Feb-03	WIFE
UBCA03	RAGHU		M	23-Jan-03	SON



EXPERIMENT 3:

3.	Perform the following:
	Altering a Table, Dropping/Truncating/Renaming Tables,Backing up / Restoring a Database.



Consider STUDENT table:
STUDENTNO	SNAME	LOC

Perform the following:
1.	Create the student table.
2.	Rename the table student as  KLESTUDENTLIST.
3.	Add a new column PINCODE with not null constraints to the existing table DEPT.
4.	All constraints and views that reference the column are dropped automatically, along with the column.
5.	Rename the column SNAME to STUDENT_NAME in dept table.
6.	Change the data type of column STUDENTNO as CHAR with size 10.
7.	Truncate table to delete the records.
8.	Delete table.

SOLUTION:
Create Table
1.CREATE TABLE STUDENT(STUDENTNO INTEGER primary key, SNAME VARCHAR2(10),LOC VARCHAR2(4));
                Table created.
DESC STUDENT;

OUTPUT:
Table		Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
STUDENT		STUDENTNO	Number		-	-		0	1		-		-	
 		SNAME		Varchar2	10	-		-	-		-		-
 		LOC		Varchar2	4	-		-	-		-		-


2. Rename the table STUDENT as KLESTUDENTLIST
ALTER TABLE STUDENT RENAME TO KLESTUDENTLIST;
                          Table altered.

DESC KLESTUDENTLIST;

OUTPUT:
Table			Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
KLESTUDENTLIST		STUDENTNO	Number		-	-		0	1		-		-	
 			SNAME		Varchar2	10	-		-	-		-		-
 			LOC		Varchar2	4	-		-	-		-		-


3. Add a new column PINCODE with not null constraints to the existing table KLESTDUENTLIST

ALTER TABLE KLESTUDENTLIST ADD(PINCODE NUMBER(6) NOT NULL);
                 Table altered.

DESC KLESTUDENTLIST;

OUTPUT:

Table			Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
KLESTUDENTLIST		STUDENTNO	Number		-	-		0	1		-		-	
 			SNAME		Varchar2	10	-		-	-		-		-
 			LOC		Varchar2	4	-		-	-		-		-
			PINCODE		Number		-	6		0	-		-		-
		

4. All constraints and views that reference the column are dropped automatically, along with the column.
ALTER TABLE KLESTUDENTLIST DROP column LOC CASCADE CONSTRAINTS;      
                 Table Dropped.

DESC KLESTUDENTLIST;

OUTPUT:
Table			Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
KLESTUDENTLIST		STUDENTNO	Number		-	-		0	1		-		-	
 			SNAME		Varchar2	10	-		-	-		-		-
 			PINCODE		Number		-	6		0	-		-		-
		
NOTE :
CASCADE in SQL is used to simultaneously delete or update an entry from both the child and parent table. The keyword CASCADE is used as a conjunction while writing the query of ON DELETE or ON UPDATE.
 also CASCADE is OPTIONAL.

5.Rename the column SNAME to STUDENT_NAME in KLESTUDENTLIST table
 ALTER TABLE KLESTUDENTLIST RENAME COLUMN SNAME TO STUDENT_NAME ;
                           Table altered.

DESC KLESTUDENTLIST;

OUTPUT:
Table			Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
KLESTUDENTLIST		STUDENTNO	Number		-	-		0	1		-		-	
 			STUDENT_NAME	Varchar2	10	-		-	-		-		-
 			PINCODE		Number		-	6		0	-		-		-
		

6. Change the datatype of colunm STUDENTNO as VARCHAR with size 10
 ALTER TABLE KLESTUDENTLIST MODIFY STUDENTNO VARCHAR2(10);
                        Table altered.

DESC KLESTUDENTLIST;

OUTPUT:
Table			Column		Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	
KLESTUDENTLIST		STUDENTNO	Varchar2	10	-		-	1		-		-	
 			STUDENT_NAME	Varchar2	10	-		-	-		-		-
 			PINCODE		Number		-	6		0	-		-		-
		

7.  Truncate table to delete the records.
INSERT INTO KLESTUDENTLIST VALUES('UAB101','PUNITH',560012);
1 row updated
INSERT INTO KLESTUDENTLIST VALUES('UAB102','RAHUL',560012);
1 row updated
INSERT INTO KLESTUDENTLIST VALUES('UAB103','RAJATH',560012);
1 row updated

SELECT * FROM KLESTUDENTLIST;

output:
STUDENTNO	STUDENT_NAME	PINCODE
UAB101		PUNITH		560012
UAB102		RAHUL		560012
UAB103		RAJATH		560012

TRUNCATE TABLE KLESTUDENTLIST;

SELECT * FROM KLESTUDENTLIST;

OUTPUT: No Data found

Truncate MEANS it delets the table information.

8. Delete table
 DROP TABLE KLESTUDENTLIST;
                     Table dropped.

KLESTUDENTLIST table deleted.

EXPERENT - 4:
Consider EMPLOYEESALARY   Table:
        ENO	NAME	DEPT	DOJ	SALARY	

4.For a given set of relation schemes, create tables and perform the following Simple Queries, Simple Queries with Aggregate functions, Queries with Aggregate functions (group by and having clause).

 Perform the following
1.	Create table salary
2.	Insert 7 tuples in to the table And Display all the fields into the table
3.	Retrieve employee number and their salary
4.	Find the sum of salaries of all employees. 
5.	Find the sum and average salary of employees of a particular department
6.	Count the no of employees working for each department
7.	Display Employee information in ascending order and descending order of their date of joining 
8.	Find the highest salary of an employee draws.
9.	Find the least salary than an employee draws 
10.	Display details of employee whose name is SANDHYA and salary greater than 50000;



1.	Create table salarytable
CREATE TABLE SALARYDB(ENO INT PRIMARY KEY,NAME VARCHAR2(10),DEPT VARCHAR2(10) ,DOJ DATE, SALARY INTEGER);

DESC SALARYDB;

output :
Table		Column	Data Type	Length	Precision	Scale	Primary Key	Nullable	Default	Comment
SALARYDB	ENO	Number		-	-		0	1		-		-	
 		NAME	Varchar2	10	-		-	-		nullable	--
 		DEPT	Varchar2	10	-		-	-		nullable	-	-
 		DOJ	Date		7	-		-	-		nullable	-	-
 		SALARY	Number		-	-		0	-		nullable	-	-

2.	Insert 7 tuples in to the table And Display all the fields into the table

Insert 7 tuples in to the table 
INSERT INTO SALARYDB VALUES(101,'ARUNA','MSC','01-JAN-22',25000);
INSERT INTO SALARYDB VALUES(102,'RAHUL','BSC','13-JAN-22',35000);
INSERT INTO SALARYDB VALUES(103,'ADITYA','BSC','12-JAN-22',55000);
INSERT INTO SALARYDB VALUES(104,'VARSHA','BSC','13-FEB-22',55000);
INSERT INTO SALARYDB VALUES(105,'SANDHYA','BSC','15-FEB-22',75000);
INSERT INTO SALARYDB VALUES(106,'SANDHYA','BSC','11-JAN-22',25000);
INSERT INTO SALARYDB VALUES(107,'ROHITH','MSC','09-JAN-22',45000);

Display all the fields of employee table:

SELECT * FROM SALARYDB;

OUTPUT:
ENO	NAME	DEPT	DOJ		SALARY
101	ARUNA	MSC	01-Jan-22	25000
102	RAHUL	BSC	13-Jan-22	35000
103	ADITYA	BSC	12-Jan-22	55000
104	VARSHA	BSC	13-Feb-22	55000
105	SANDHYA	BSC	15-Feb-22	75000
106	SANDHYA	BSC	11-Jan-22	25000
107	ROHITH	MSC	09-Jan-22	45000

3. Retrieve employee number and their salary
SELECT ENO,SALARY FROM SALARYDB;

OUTPUT:
ENO	SALARY
101	25000
102	35000
103	55000
104	55000
105	75000
106	25000
107	45000


4. Find the sum of salaries of all employees. 
select sum(salary) as "total_salary" from SALARYDB;

OUTPUT:
Total_salary
315000


5.	Find the sum and average salary of employees of a particular department
select dept,sum(salary) as "total_salary",avg(salary) as "average_salary" From SALARYDB group by dept;
output:
DEPT	Total_salary	Average_salary
BSC	245000		49000
MSC	70000		35000


6.	Count the no of employees working for each department
        select dept,count(*) as "number_of_employees" from SALARYDB group by dept;

output :
DEPT	Number_of_employees
BSC	5
MSC	2

7.	Display Employee information in ascending order and descending order of their date of joining 
     Employee information in ascending order

 select * from SALARYDB order by DOJ ASC;

OUTPUT:
ENO	NAME		DEPT	DOJ		SALARY
101	ARUNA		MSC	01-JAN-22	25000
107	ROHITH		MSC	09-JAN-22	45000
106	SANDHYA		BSC	11-JAN-22	25000
103	ADITYA		BSC	12-JAN-22	55000
102	RAHUL		BSC	13-JAN-22	35000
104	VARSHA		BSC	13-FEB-22	55000
105	SANDHYA		BSC	15-FEB-22	75000

 Employee information in descending order

select * from SALARYDB order by DOJ DESC;

output:
ENO	NAME		DEPT	DOJ		SALARY
105	SANDHYA		BSC	15-FEB-22	75000
104	VARSHA		BSC	13-FEB-22	55000
102	RAHUL		BSC	13-JAN-22	35000
103	ADITYA		BSC	12-JAN-22	55000
106	SANDHYA		BSC	11-JAN-22	25000
107	ROHITH		MSC	09-JAN-22	45000
101	ARUNA		MSC	01-JAN-22	25000



8.  Find the highest salary of an employee draws.
   select max(salary) as "Highest_salary" from SALARYDB;
output:
Highest_salary
75000

9. Find the least salary than an employee draws 
         select min(salary) as "Least_salary" from SALARYDB;
output:
Least_salary
25000

10. Display details of employee whose name is SANDHYA and salary greater than 50000;
       select * from SALARYDB where name='SANDHYA' and salary>50000;
OUTPUT:
ENO	NAME		DEPT	DOJ	 	SALARY
105	SANDHYA	BSC	15-FEB-22	75000


Lab exp 5:
OBJECTIVE 1. How the resulting salaries if every employee working on the ‘RESEARCH’ Departments is given a 10 percent raise
SOL: 
SELECT E.SSN, E.FNAME, D.DNAME,1.1*E.SALARY AS "INCR_SAL"  FROM EMPLOYEE61 E,DEPARTMENT61 D WHERE  E.DNO=D.DNO AND D.DNAME='RESEARCH';

OUTPUT:
SSN	FNAME	 	 DNAME	INCR_SAL
UBSC01	HARSHA   RESEARCH	27500
UBSC04	ARUNA	  RESEARCH	27500

Obehective 2: Find the sum of the salaries of all employees of the ‘Accounts’ department, as well as the maximum salary, the minimum salary, and the average salary in this department
SOL:
SELECT SUM(E.SALARY),MAX(E.SALARY),MIN(E.SALARY), AVG(E.SALARY)FROM EMPLOYEE61 E,DEPARTMENT61 D WHERE E.DNO=D.DNO AND D.DNAME='ACCOUNTS';

OUTPUT:
SUM(E.SALARY)	MAX(E.SALARY)	MIN(E.SALARY)	AVG(E.SALARY)
160000		65000		25000		40000


Lab EXPERIMENT -6

OBJECTIVE 1. Retrieve the name of each employee Controlled by department number 5 (use EXISTS operator).
SOL:

 SELECT E.FNAME,E.LNAME FROM EMPLOYEE61 E WHERE EXISTS(SELECT DNO FROM EMPLOYEE61 WHERE E.DNO=5);

OUTPUT:
FNAME		LNAME
MANJU		GOWDA
LALLI 		NAYAK
SHANKAR 	IYER

Objective 2.Retrieve the name of each dept and number of employees working in each department which has at least 2 employees
SOL:
SELECT D.DNAME, COUNT(*) FROM EMPLOYEE61 E, DEPARTMENT61 D WHERE E.DNO=D.DNO GROUP BY D.DNAME HAVING COUNT(*)>=2;

OUTPUT:
DNAME		COUNT(*)
RESEARCH	2
MSC		3
ACCOUNTS	4


Lab EXPERIMENT-7
OBJECTIVE 1.	For each project, retrieve the project number, the project name, and the number of employee who work on that project.(use GROUP BY)
SOL:
SELECT P.PNO,P.PNAME, COUNT(*) AS " NO_OF_EMP" FROM PROJECT61 P, WORKS_ON61 W WHERE P.PNO=W.PNO GROUP BY P.PNO,P.PNAME;

OUTPUT:
PNO	PNAME			NO_OF_EMP
103	METRO_RAIL			2
100	DOTNET			1
102	EMBEDDED_C			2
104	ATTENDENCE_REPORT		2
105	DATA_SCIENCE			1
101	WEBDEVELOPMENT		1


OBJECTIVE 2 : Retrieve the name of employees who born in the year 2003’s
SOL :

SELECT FNAME,LNAME,BDATE FROM EMPLOYEE61 WHERE BDATE LIKE '%-%-03';

OUTPUT:
FNAME		LNAME		BDATE
PRAKASH	GOWDA	11-JAN-03
DEEPAK		SINGH		16-FEB-03
RAJATH		GOWDA	18-JAN-03
SUSHIL		SHETTY		11-SEP-03
SHWETHA	GOWDA	18-MAR-03
BHARATH	GOWDA	14-OCT-03
LALLI		GOWDA	12-JAN-03
SHASHIKALA	GOWDA	18-JUN-03
RANJITH	SHETTY		19-JAN-03


Lab EXPERIMENT-8

OBJECTIVE 1.    For each department that has more than TWO employees, retrieve the 
department number and the number of its employees who are making more 
than Rs. 40,000.
SOL:
SELECT D.DNO, COUNT (*) FROM DEPARTMENT61 D, EMPLOYEE61 E WHERE D.DNO=E.DNO AND E.SALARY>40000 
AND D.DNO IN (SELECT E1.DNO FROM EMPLOYEE61 E1 GROUP BY E1.DNO HAVING COUNT (*)>2) GROUP BY D.DNO;

OUTPUT:
DNO	COUNT(*)
5	2
3	1

OBJECTIVE 2.   For each department that has more than FIVE employees, retrieve the 
department number and the number of its employees who are making more 
than Rs. 40,000.

Sol:
SELECT D.DNO, COUNT (*) FROM DEPARTMENT61 D, EMPLOYEE61 E WHERE D.DNO=E.DNO AND E.SALARY>40000  AND D.DNO IN (SELECT E1.DNO FROM EMPLOYEE61 E1 GROUP BY E1.DNO HAVING COUNT (*)>5) GROUP BY D.DNO;

OUTPUT:
NO DATA FOUND


LAB EXPERIMENT-9:

OBJECTIVE 1 .For each project on which atleast two employees work, retrieve the project number, project name and the number of employees who work on that project.
SOL :

 SELECT P.PNO,P.PNAME,COUNT(*) AS "NO_OF_EMP_WORKING" FROM PROJECT61 P,WORKS_ON61 W WHERE P.PNO=W.PNO GROUP BY P.PNO,P.PNAME HAVING COUNT(*)>=2;

OUTPUT:
PNO	PNAME			NO_OF_EMP_WORKING
103	METRO_RAIL		2
102	EMBEDDED_C		2
104	ATTENDENCE_REPORT	2


LAB EXPERIMENT-10

SELECT * FROM EMPLOYEE61;
SELECT * FROM DEPARTMENT61; 

1. Without Check option:

step 1: Create View
	
 CREATE VIEW EMP_DEPT1 AS(SELECT E.SSN,E.FNAME,E.DNO,E.SALARY,D.DNAME FROM EMPLOYEE61 E,DEPARTMENT61 D WHERE E.DNO=D.DNO);

View created

step 2: Display all the rows of a view

SELECT * FROM EMP_DEPT1;

OUTPUT:
SSN		FNAME		DNO	SALARY	DNAME
UBSC01		PRAKASH		1	25000	RESEACH
UBSC02		DEEPAK			3	35000	ACCOUNTS
UBSC03		RAJATH			5	45000	BSC
UBSC04		SUSHIL			1	25000	RESEACH
UBSC05		SATHISH		3	35000	ACCOUNTS
UBSC06		SHWETHA		3	65000	ACCOUNTS
UBSC07		BHARATH		3	25000	ACCOUNTS
UBSC08		LALLI			5	45000	BSC
UBSC09		SHASHIKALA		5	25000	BSC
UBSC11		JOSHI			3	65000	ACCOUNTS
UBSC12		LAVANYA		3	65000	ACCOUNTS

step :3  Drop View

DROP VIEW EMP_DEPT1;

View Dropped

2. With check option

Step 1:

CREATE VIEW EMP_VIEW AS (SELECT SSN,FNAME,SALARY FROM EMPLOYEE61 WHERE SALARY<=50000) WITH CHECK OPTION;

View created

step 2: Display all the rows of a view

SELECT * FROM EMP_VIEW;

Step 3 : Drop View

DROP VIEW EMP_VIEW




